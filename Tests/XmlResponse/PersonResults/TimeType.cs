//
// TimeType.cs
//
// This file was generated by XMLSpy 2006sp2 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//


using Altova.Types;

namespace PersonResults
{

	public class TimeType : SchemaString
	{
		public static string[] sEnumValues = {
			"33:43",
			"35:46",
			"36:10",
			"36:42",
			"43:49",
			"46:53",
			"49:35",
			"50:05",
			"56:34",
			"66:43",
			"68:53",
			"79:14",
			"82:29",
		};

		public enum EnumValues
		{
			e33_43 = 0, /* 33:43 */
			e35_46 = 1, /* 35:46 */
			e36_10 = 2, /* 36:10 */
			e36_42 = 3, /* 36:42 */
			e43_49 = 4, /* 43:49 */
			e46_53 = 5, /* 46:53 */
			e49_35 = 6, /* 49:35 */
			e50_05 = 7, /* 50:05 */
			e56_34 = 8, /* 56:34 */
			e66_43 = 9, /* 66:43 */
			e68_53 = 10, /* 68:53 */
			e79_14 = 11, /* 79:14 */
			e82_29 = 12, /* 82:29 */
			EnumValueCount
		};

		public TimeType() : base()
		{
		}

		public TimeType(string newValue) : base(newValue)
		{
			Validate();
		}

		public TimeType(SchemaString newValue) : base(newValue)
		{
			Validate();
		}

		public static int GetEnumerationCount()
		{
			return sEnumValues.Length;
		}

		public static string GetEnumerationValue(int index)
		{
			return sEnumValues[index];
		}

		public static bool IsValidEnumerationValue(string val)
		{
			foreach (string s in sEnumValues)
			{
				if (val == s)
					return true;
			}
			return false;
		}

		public void Validate()
		{

			if (!IsValidEnumerationValue(ToString()))
				throw new System.Exception("Value of Time is invalid.");
		}
	}
}
