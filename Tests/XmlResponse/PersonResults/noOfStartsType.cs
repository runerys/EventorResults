//
// noOfStartsType.cs
//
// This file was generated by XMLSpy 2006sp2 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//


using Altova.Types;

namespace PersonResults
{

	public class noOfStartsType : SchemaInt
	{
		public static string[] sEnumValues = {
			"105",
			"14",
			"21",
			"26",
			"27",
			"33",
			"34",
			"36",
			"52",
			"55",
			"9",
		};

		public enum EnumValues
		{
			e105 = 0, /* 105 */
			e14 = 1, /* 14 */
			e21 = 2, /* 21 */
			e26 = 3, /* 26 */
			e27 = 4, /* 27 */
			e33 = 5, /* 33 */
			e34 = 6, /* 34 */
			e36 = 7, /* 36 */
			e52 = 8, /* 52 */
			e55 = 9, /* 55 */
			e9 = 10, /* 9 */
			EnumValueCount
		};

		public noOfStartsType() : base()
		{
		}

		public noOfStartsType(string newValue) : base(newValue)
		{
			Validate();
		}

		public noOfStartsType(SchemaInt newValue) : base(newValue)
		{
			Validate();
		}

		public static int GetEnumerationCount()
		{
			return sEnumValues.Length;
		}

		public static string GetEnumerationValue(int index)
		{
			return sEnumValues[index];
		}

		public static bool IsValidEnumerationValue(string val)
		{
			foreach (string s in sEnumValues)
			{
				if (val == s)
					return true;
			}
			return false;
		}

		public void Validate()
		{

			if (!IsValidEnumerationValue(ToString()))
				throw new System.Exception("Value of noOfStarts is invalid.");
		}
	}
}
