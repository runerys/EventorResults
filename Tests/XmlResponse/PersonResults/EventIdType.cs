//
// EventIdType.cs
//
// This file was generated by XMLSpy 2006sp2 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//


using Altova.Types;

namespace PersonResults
{

	public class EventIdType : SchemaInt
	{
		public static string[] sEnumValues = {
			"1474",
			"1521",
			"1522",
			"1798",
			"2134",
			"467",
			"538",
			"541",
			"555",
			"556",
			"557",
			"558",
			"860",
			"879",
		};

		public enum EnumValues
		{
			e1474 = 0, /* 1474 */
			e1521 = 1, /* 1521 */
			e1522 = 2, /* 1522 */
			e1798 = 3, /* 1798 */
			e2134 = 4, /* 2134 */
			e467 = 5, /* 467 */
			e538 = 6, /* 538 */
			e541 = 7, /* 541 */
			e555 = 8, /* 555 */
			e556 = 9, /* 556 */
			e557 = 10, /* 557 */
			e558 = 11, /* 558 */
			e860 = 12, /* 860 */
			e879 = 13, /* 879 */
			EnumValueCount
		};

		public EventIdType() : base()
		{
		}

		public EventIdType(string newValue) : base(newValue)
		{
			Validate();
		}

		public EventIdType(SchemaInt newValue) : base(newValue)
		{
			Validate();
		}

		public static int GetEnumerationCount()
		{
			return sEnumValues.Length;
		}

		public static string GetEnumerationValue(int index)
		{
			return sEnumValues[index];
		}

		public static bool IsValidEnumerationValue(string val)
		{
			foreach (string s in sEnumValues)
			{
				if (val == s)
					return true;
			}
			return false;
		}

		public void Validate()
		{

			if (!IsValidEnumerationValue(ToString()))
				throw new System.Exception("Value of EventId is invalid.");
		}
	}
}
