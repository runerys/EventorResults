//
// ResultIdType.cs
//
// This file was generated by XMLSpy 2006sp2 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//


using Altova.Types;

namespace PersonResults
{

	public class ResultIdType : SchemaInt
	{
		public static string[] sEnumValues = {
			"109534",
			"109535",
			"109536",
			"119901",
			"126253",
			"172799",
			"202461",
			"207121",
			"208270",
			"66104",
			"75112",
			"79254",
			"79259",
			"87680",
		};

		public enum EnumValues
		{
			e109534 = 0, /* 109534 */
			e109535 = 1, /* 109535 */
			e109536 = 2, /* 109536 */
			e119901 = 3, /* 119901 */
			e126253 = 4, /* 126253 */
			e172799 = 5, /* 172799 */
			e202461 = 6, /* 202461 */
			e207121 = 7, /* 207121 */
			e208270 = 8, /* 208270 */
			e66104 = 9, /* 66104 */
			e75112 = 10, /* 75112 */
			e79254 = 11, /* 79254 */
			e79259 = 12, /* 79259 */
			e87680 = 13, /* 87680 */
			EnumValueCount
		};

		public ResultIdType() : base()
		{
		}

		public ResultIdType(string newValue) : base(newValue)
		{
			Validate();
		}

		public ResultIdType(SchemaInt newValue) : base(newValue)
		{
			Validate();
		}

		public static int GetEnumerationCount()
		{
			return sEnumValues.Length;
		}

		public static string GetEnumerationValue(int index)
		{
			return sEnumValues[index];
		}

		public static bool IsValidEnumerationValue(string val)
		{
			foreach (string s in sEnumValues)
			{
				if (val == s)
					return true;
			}
			return false;
		}

		public void Validate()
		{

			if (!IsValidEnumerationValue(ToString()))
				throw new System.Exception("Value of ResultId is invalid.");
		}
	}
}
