//
// EventClassIdType.cs
//
// This file was generated by XMLSpy 2006sp2 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//


using Altova.Types;

namespace PersonResults
{

	public class EventClassIdType : SchemaInt
	{
		public static string[] sEnumValues = {
			"11929",
			"13302",
			"16148",
			"16152",
			"16697",
			"6073",
			"6224",
			"6349",
			"6636",
			"6871",
			"6944",
			"6982",
			"7025",
			"7096",
		};

		public enum EnumValues
		{
			e11929 = 0, /* 11929 */
			e13302 = 1, /* 13302 */
			e16148 = 2, /* 16148 */
			e16152 = 3, /* 16152 */
			e16697 = 4, /* 16697 */
			e6073 = 5, /* 6073 */
			e6224 = 6, /* 6224 */
			e6349 = 7, /* 6349 */
			e6636 = 8, /* 6636 */
			e6871 = 9, /* 6871 */
			e6944 = 10, /* 6944 */
			e6982 = 11, /* 6982 */
			e7025 = 12, /* 7025 */
			e7096 = 13, /* 7096 */
			EnumValueCount
		};

		public EventClassIdType() : base()
		{
		}

		public EventClassIdType(string newValue) : base(newValue)
		{
			Validate();
		}

		public EventClassIdType(SchemaInt newValue) : base(newValue)
		{
			Validate();
		}

		public static int GetEnumerationCount()
		{
			return sEnumValues.Length;
		}

		public static string GetEnumerationValue(int index)
		{
			return sEnumValues[index];
		}

		public static bool IsValidEnumerationValue(string val)
		{
			foreach (string s in sEnumValues)
			{
				if (val == s)
					return true;
			}
			return false;
		}

		public void Validate()
		{

			if (!IsValidEnumerationValue(ToString()))
				throw new System.Exception("Value of EventClassId is invalid.");
		}
	}
}
