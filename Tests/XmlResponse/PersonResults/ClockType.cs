//
// ClockType.cs
//
// This file was generated by XMLSpy 2006sp2 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//


using Altova.Types;

namespace PersonResults
{

	public class ClockType : SchemaString
	{
		public static string[] sEnumValues = {
			"00:00:00",
			"00:00:03",
			"01:57:20",
			"08:22:49",
			"08:23:02",
			"08:43:40",
			"10:04:07",
			"10:04:28",
			"10:06:13",
			"10:53:00",
			"11:00:00",
			"11:07:00",
			"11:09:19",
			"11:09:24",
			"11:13:00",
			"11:28:00",
			"11:30:00",
			"11:42:35",
			"11:44:00",
			"11:53:53",
			"11:53:58",
			"12:00:00",
			"12:20:05",
			"12:32:14",
			"12:50:43",
			"13:00:00",
			"13:39:00",
			"13:40:00",
			"13:52:00",
			"14:35:49",
			"14:36:34",
			"14:41:59",
			"14:42:06",
			"14:47:53",
			"14:49:52",
			"14:51:08",
			"14:56:05",
			"14:56:16",
			"16:37:12",
			"17:11:41",
			"18:02:24",
			"18:06:21",
			"18:30:00",
			"18:31:00",
			"18:46:00",
			"18:54:52",
			"19:00:00",
			"19:15:00",
			"19:22:42",
			"19:28:35",
			"19:35:46",
			"19:38:17",
			"19:38:59",
			"19:45:00",
			"20:00:00",
			"20:15:00",
			"20:36:10",
			"20:52:51",
			"21:00:00",
			"21:04:52",
			"21:15:00",
			"21:37:29",
			"21:55:12",
			"21:56:34",
			"22:03:14",
			"22:03:15",
			"22:04:55",
			"22:19:40",
			"22:19:42",
			"22:26:40",
			"22:26:42",
			"22:58:28",
			"23:02:36",
			"23:02:48",
			"23:22:08",
			"23:23:08",
			"23:23:24",
			"23:29:14",
			"23:46:27",
		};

		public enum EnumValues
		{
			e00_00_00 = 0, /* 00:00:00 */
			e00_00_03 = 1, /* 00:00:03 */
			e01_57_20 = 2, /* 01:57:20 */
			e08_22_49 = 3, /* 08:22:49 */
			e08_23_02 = 4, /* 08:23:02 */
			e08_43_40 = 5, /* 08:43:40 */
			e10_04_07 = 6, /* 10:04:07 */
			e10_04_28 = 7, /* 10:04:28 */
			e10_06_13 = 8, /* 10:06:13 */
			e10_53_00 = 9, /* 10:53:00 */
			e11_00_00 = 10, /* 11:00:00 */
			e11_07_00 = 11, /* 11:07:00 */
			e11_09_19 = 12, /* 11:09:19 */
			e11_09_24 = 13, /* 11:09:24 */
			e11_13_00 = 14, /* 11:13:00 */
			e11_28_00 = 15, /* 11:28:00 */
			e11_30_00 = 16, /* 11:30:00 */
			e11_42_35 = 17, /* 11:42:35 */
			e11_44_00 = 18, /* 11:44:00 */
			e11_53_53 = 19, /* 11:53:53 */
			e11_53_58 = 20, /* 11:53:58 */
			e12_00_00 = 21, /* 12:00:00 */
			e12_20_05 = 22, /* 12:20:05 */
			e12_32_14 = 23, /* 12:32:14 */
			e12_50_43 = 24, /* 12:50:43 */
			e13_00_00 = 25, /* 13:00:00 */
			e13_39_00 = 26, /* 13:39:00 */
			e13_40_00 = 27, /* 13:40:00 */
			e13_52_00 = 28, /* 13:52:00 */
			e14_35_49 = 29, /* 14:35:49 */
			e14_36_34 = 30, /* 14:36:34 */
			e14_41_59 = 31, /* 14:41:59 */
			e14_42_06 = 32, /* 14:42:06 */
			e14_47_53 = 33, /* 14:47:53 */
			e14_49_52 = 34, /* 14:49:52 */
			e14_51_08 = 35, /* 14:51:08 */
			e14_56_05 = 36, /* 14:56:05 */
			e14_56_16 = 37, /* 14:56:16 */
			e16_37_12 = 38, /* 16:37:12 */
			e17_11_41 = 39, /* 17:11:41 */
			e18_02_24 = 40, /* 18:02:24 */
			e18_06_21 = 41, /* 18:06:21 */
			e18_30_00 = 42, /* 18:30:00 */
			e18_31_00 = 43, /* 18:31:00 */
			e18_46_00 = 44, /* 18:46:00 */
			e18_54_52 = 45, /* 18:54:52 */
			e19_00_00 = 46, /* 19:00:00 */
			e19_15_00 = 47, /* 19:15:00 */
			e19_22_42 = 48, /* 19:22:42 */
			e19_28_35 = 49, /* 19:28:35 */
			e19_35_46 = 50, /* 19:35:46 */
			e19_38_17 = 51, /* 19:38:17 */
			e19_38_59 = 52, /* 19:38:59 */
			e19_45_00 = 53, /* 19:45:00 */
			e20_00_00 = 54, /* 20:00:00 */
			e20_15_00 = 55, /* 20:15:00 */
			e20_36_10 = 56, /* 20:36:10 */
			e20_52_51 = 57, /* 20:52:51 */
			e21_00_00 = 58, /* 21:00:00 */
			e21_04_52 = 59, /* 21:04:52 */
			e21_15_00 = 60, /* 21:15:00 */
			e21_37_29 = 61, /* 21:37:29 */
			e21_55_12 = 62, /* 21:55:12 */
			e21_56_34 = 63, /* 21:56:34 */
			e22_03_14 = 64, /* 22:03:14 */
			e22_03_15 = 65, /* 22:03:15 */
			e22_04_55 = 66, /* 22:04:55 */
			e22_19_40 = 67, /* 22:19:40 */
			e22_19_42 = 68, /* 22:19:42 */
			e22_26_40 = 69, /* 22:26:40 */
			e22_26_42 = 70, /* 22:26:42 */
			e22_58_28 = 71, /* 22:58:28 */
			e23_02_36 = 72, /* 23:02:36 */
			e23_02_48 = 73, /* 23:02:48 */
			e23_22_08 = 74, /* 23:22:08 */
			e23_23_08 = 75, /* 23:23:08 */
			e23_23_24 = 76, /* 23:23:24 */
			e23_29_14 = 77, /* 23:29:14 */
			e23_46_27 = 78, /* 23:46:27 */
			EnumValueCount
		};

		public ClockType() : base()
		{
		}

		public ClockType(string newValue) : base(newValue)
		{
			Validate();
		}

		public ClockType(SchemaString newValue) : base(newValue)
		{
			Validate();
		}

		public static int GetEnumerationCount()
		{
			return sEnumValues.Length;
		}

		public static string GetEnumerationValue(int index)
		{
			return sEnumValues[index];
		}

		public static bool IsValidEnumerationValue(string val)
		{
			foreach (string s in sEnumValues)
			{
				if (val == s)
					return true;
			}
			return false;
		}

		public void Validate()
		{

			if (!IsValidEnumerationValue(ToString()))
				throw new System.Exception("Value of Clock is invalid.");
		}
	}
}
